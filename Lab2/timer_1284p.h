/* timer_1284p.h
 *
 * Created: 3/10/2013 10:01:25 PM
 *  Author: Kyle
 */

typedef enum 
{
    TIMER_1284P_0,
    TIMER_1284P_1,
    TIMER_1284P_2,
    TIMER_1284P_3,
    TIMER_1284P_NUM
} TIMER_1284P_E;

typedef enum
{
    TIMER_1284P_COM_NO_COMPARE = 0,
    TIMER_1284P_COM_TOGGLE = 1,
    TIMER_1284P_COM_CLEAR = 2,
    TIMER_1284P_COM_SET = 3
} TIMER_1284P_COM_E;

typedef enum
{
    TIMER_1284P_WGM_NORMAL,
    TIMER_1284P_WGM_CTC,
    TIMER_1284P_WGM_FAST_PWM
} TIMER_1284P_WGM_E;

typedef enum
{
    TIMER_1284P_FOC_INACTIVE,
    TIMER_1284P_FOC_ACTIVE,
} TIMER_1284P_FOC_E;

typedef enum
{
    TIMER_1284P_CS_DISABLE = 0,
    TIMER_1284P_CS_PRESCALE_DIV1 = 1,
    TIMER_1284P_CS_PRESCALE_DIV8 = 2,
    TIMER_1284P_CS_PRESCALE_DIV64 = 3,
    TIMER_1284P_CS_PRESCALE_DIV256 = 4,
    TIMER_1284P_CS_PRESCALE_DIV1024 = 5,
    TIMER_1284P_CS_EXT_FALL_EDGE = 6,
    TIMER_1284P_CS_EXT_RISE_EDGE = 7,
    TIMER_1284P_CS_PRESCALE_DIV256_TIMER2 = 6
} TIMER_1284P_CS_E;

typedef enum
{
    TIMER_1284P_A,
    TIMER_1284P_B,
} TIMER_1284P_AB_E;

typedef enum
{
    TIMER_1284P_IE_A,
    TIMER_1284P_IE_B,
    TIMER_1284P_IE_OVERFLOW,
} TIMER_1284P_INT_E;

void timer_1284p_set_COM(TIMER_1284P_E, TIMER_1284P_AB_E, TIMER_1284P_COM_E);
void timer_1284p_set_WGM(TIMER_1284P_E, TIMER_1284P_WGM_E);
void timer_1284p_set_CS(TIMER_1284P_E, TIMER_1284P_CS_E);
void timer_1284p_set_OCR(TIMER_1284P_E, TIMER_1284P_AB_E, int);
void timer_1284p_set_IE(TIMER_1284P_E, TIMER_1284P_INT_E);

void timer_1284p_clr_counter(TIMER_1284P_E);
void timer_1284p_clr_IE(TIMER_1284P_E, TIMER_1284P_INT_E);

int timer_1284p_get_counter(TIMER_1284P_E);
